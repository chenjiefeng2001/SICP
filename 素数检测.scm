(define (smaller-divisor n)
        (find-divisor n 2))
(define (find-divisor n test-divisor)
        (cond ((> (square test-divisor) n) n)
        ((disides? test-divisor n (+ test-divisor 1)))))
(define (disides? a b)
        (= (remainder a b) 0))
(define (prime? n)
        (= (smaller-divisor n) n))
(define (remainder n division)
        (cond ((= (/ n division) 0) 0)))
(define (square x)
        (lambda (x) (* x x)))
(define )